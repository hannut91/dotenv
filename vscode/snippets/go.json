{
	// Place your snippets for go here. Each snippet is defined under a snippet name and has a prefix, body and 
	// description. The prefix is what is used to trigger the snippet and the body will be expanded and inserted. Possible variables are:
	// $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders. Placeholders with the 
	// same ids are connected.
	// Example:
	// "Print to console": {
	// 	"prefix": "log",
	// 	"body": [
	// 		"console.log('$1');",
	// 		"$2"
	// 	],
	// 	"description": "Log output to console"
  // }
  "Describe": {
    "prefix": "de",
    "body": [
      "Describe(\"$1\", func() {",
      "  $0",
      "})"
    ]
  },
  "Context": {
    "prefix": "co",
    "body": [
      "Context(\"$1\", func() {",
      "  $0",
      "})"
    ]
  },
  "It": {
    "prefix": "it",
    "body": [
      "It(\"$1\", func() {",
      "  $0",
      "})"
    ]
  },
  "BeforeEach": {
    "prefix": "be",
    "body": [
      "BeforeEach(func() {",
      "  $0",
      "})"
    ]
  },
  "AfterEach": {
    "prefix": "af",
    "body": [
      "AfterEach(func() {",
      "  $0",
      "})"
    ]
  },
  "error": {
    "prefix": "e",
    "body": [
      "if err != nil {",
      "  return",
      "}"
    ]
  },
  "error log println": {
    "prefix": "el",
    "body": [
      "if err != nil {",
      "  log.Panicln(\"$0 err:\", err)",
      "}"
    ]
  },
  "Expect": {
    "prefix": "ex",
    "body": [
      "Expect($1).to($2)"
    ]
  },
  "Log": {
    "prefix": "log",
    "body": [
      "log.Println(\"$1:\", $1)"
    ]
  },
}